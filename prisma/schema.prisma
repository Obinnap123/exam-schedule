generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                      Int       @id @default(autoincrement())
  email                   String    @unique
  password                String
  firstName               String
  lastName                String
  isVerified              Boolean   @default(false)
  verificationToken       String?
  verificationTokenExpiry DateTime?
  rememberToken           String?
  chats                   Chat[]
  createdAt               DateTime  @default(now())
  updatedAt               DateTime  @updatedAt
}

model Course {
  id         Int         @id @default(autoincrement())
  code       String      @unique
  title      String @default("Untitled")
  students   Int
  duration   Int?
  level      Int? // <-- add this
  department String? // <-- add this
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  timetables Timetable[]
}

model Hall {
  id         Int         @id @default(autoincrement())
  name       String      @unique
  capacity   Int
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  timetables Timetable[]
}

model Supervisor {
  id         Int     @id @default(autoincrement())
  fullName   String // ✅ Change from `name` to `fullName`
  email      String  @unique
  phone      String?
  department String?

  timetables Timetable[] @relation("TimetableSupervisors")
}

model Chat {
  id        Int           @id @default(autoincrement())
  userId    Int
  user      User          @relation(fields: [userId], references: [id]) // <-- Add this line
  title     String?
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
  messages  ChatMessage[]
}

model ChatMessage {
  id        Int      @id @default(autoincrement())
  chatId    Int
  role      String // "user" or "assistant"
  content   String // The message content
  createdAt DateTime @default(now())

  chat Chat @relation(fields: [chatId], references: [id])
}

model Timetable {
  id                 Int          @id @default(autoincrement())
  day                String
  date               String // ✅ Make sure this line exists
  timeSlot           String
  startTime          String
  endTime            String
  groupedCourseCodes String
  groupedHallNames   String
  courseCode         Course?      @relation(fields: [courseCodeId], references: [id])
  courseCodeId       Int?
  hall               Hall?        @relation(fields: [hallId], references: [id])
  hallId             Int?
  supervisors        Supervisor[] @relation("TimetableSupervisors")
}
