generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Hall {
  id         Int         @id @default(autoincrement())
  name       String      @unique // Ensure hall names are unique
  capacity   Int?        // Optional field for hall capacity
  timetables Timetable[] // One-to-many relationship with Timetable
}

model Course {
  id             Int         @id @default(autoincrement())
  code           String      @unique // Ensure course codes are unique
  title          String
  level          Int
  department     String
  studentsCount  Int
  timetables     Timetable[] // One-to-many relationship with Timetable
}

model Supervisor {
  id         Int     @id @default(autoincrement())
  fullName    String
  email       String      @unique
  phone       String?
  department  String?
  timetables  Timetable[] @relation("SupervisorToTimetable")
}

model Timetable {
  id            Int         @id @default(autoincrement())
  date          String
  day           String
  timeSlot      String
  startTime     String
  endTime       String
  courseCode    Course      @relation(fields: [courseId], references: [id]) // Link to Course
  courseId      Int
  hall          Hall        @relation(fields: [hallId], references: [id]) // Link to Hall
  hallId        Int
  supervisors   Supervisor[] @relation("SupervisorToTimetable")
  groupedCourseCodes String?
  groupedHallNames   String?
}

model Chat {
  id         Int           @id @default(autoincrement())
  userId     String        // Can store the user's ID (or session token / email / anything that identifies the user)
  title      String?       // Optional: give chats a title (e.g., "Exam Schedule - June 2025")
  createdAt  DateTime      @default(now())
  updatedAt  DateTime      @updatedAt
  messages   ChatMessage[] // The chat messages linked to this chat
}

model ChatMessage {
  id        Int       @id @default(autoincrement())
  chatId    Int
  role      String    // "user" or "assistant"
  content   String    // The message content
  createdAt DateTime  @default(now())

  chat      Chat      @relation(fields: [chatId], references: [id])
}
